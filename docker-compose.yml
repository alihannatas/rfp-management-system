version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rfp-postgres
    environment:
      POSTGRES_DB: rfp_management
      POSTGRES_USER: rfp_user
      POSTGRES_PASSWORD: rfp_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - rfp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rfp_user -d rfp_management"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rfp-backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://rfp_user:rfp_password@postgres:5432/rfp_management?schema=public
      JWT_SECRET: your-super-secret-jwt-key-here-change-in-production
      JWT_EXPIRES_IN: 7d
      PORT: 3001
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - rfp-network
    volumes:
      - ./backend/uploads:/app/uploads
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rfp-frontend
    environment:
      VITE_API_URL: http://localhost:3001/api
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - rfp-network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: rfp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - rfp-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  rfp-network:
    driver: bridge


